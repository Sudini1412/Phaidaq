[base]
seed     = 1234
#ev_max  = 10
nevents  = 10    # number of events
run_type = data # laser, data
map = None
db_filename = None
ser            = 0       # specify run number or 0 to take the closest one, preceeding the run under reconstruction


[daq]
data_format  = NAsetup2 # options: NAsetup1, NAsetup2, proto0, dart
n_channels = 10000
eff = 0.9
jitter = 5e-9
gate = 50e-6
pre = 10e-6
sampling = 125e6
snr = 5
mVpp = 2000  # mV
mVoffset = -800  # mV
bits = 12
noise_spectrum = 0 #noise_spectrum.dat
boards          = 2

[sipm]
response  = feb #asic
spread = 0.08
dcr = 200 #200
ap-tau = 3e-6
# these are probabilities and not mean values
ap = 0.1
dict = 0.2
phct = 0
pe_to_mV = 7  # 7mV@7VOV (assume ~1mv per 1VOV)
tile_design = 0  # 0 is baseline design (3p2s), 1 is new design (6p4s)
sat_threshold_sumamp = -1300  # mV
sat_threshold_tia = -1650  # mV

[arma]
tau = 540e-9
sigma = 8e-9
scale = 0.94 # scale is the probability of the SiPM slow component (charge ratio, not amplitude ratio)

[reco]
bl_from = 0
bl_to   = 400
baseline_from = -1e-6
baseline_to = -20e-9
t0_cumfrac = 0.20
fprompt_from = -1e-6
fprompt_to = 90e-9
tot_threshold = 6 #rms
# for the moment, integration is performed over the full gate

[roi]
n_trigs=100 # number of events to determine the trigger position
roi_low=50  # lower bound of the ROI in number of samples 
roi_tot=500 # extension of the ROI in number of samples 

[hit_finding]
ma_gate          = 100
min_integral     = 6 #12
window           = 600

[pulse_finding]
width            = 20 #(ns)
s1_min           = 7
rolling          = 800 #(ns)
s1_window        = 500 #(ns) 3200
s2_window        = 3000 #(ns)
pre_gate         = 60 #(ns)

[mapping]
is_remap = False
map_type = 2x2  # 2x2, 5x5
full_map = [[2, 5, 7, 10, 12], [2, 5, 7, 10, 12], [1, 4, 6,   9, 11], [1, 4, 6,   9, 11], [0, 3, 3,   8,   8]]
corner_map = [[2, -1, -1, -1, -1], [1,   4, -1, -1, -1], [1,   4,  6,  -1, -1], [0,   3,  5,   7, -1], [0,   3,  5,   7,  8]]
is_symmetric = False  # Only used for map_type='5x5'

[xyreco]
method = dbscan
eps = 1  # PDMs
min_frac = 0.03
is_max_chan = True
m_pdms = 5
n_pdms = 5

[toy]
generator = s1      # generator type: s1, s2 or laser
n_chs     = 1       # number of channels to use in the generation (-1: all)
npe       = 600      # mean number of photoelectrons
method    = poisson # pe generation: poisson or fixed
fp        = 0.3     # singlet (LAr or GAr) probability
lar_tau1  = 6       # LAr singlet tau (ns)
lar_tau2  = 1600    # LAr triplet tau (ns)
gar_tau1  = 10      # Gar singlet tau (ns)
gar_tau2  = 3600    # Gar triplet tau (ns)
T         = 1000    # drift time in the gas pocket
tdrift    = 10000   # maximum drift time in liquid (ns)
gar_sigma = 50      # gaussian simulating gaussin smearing for the diffusion
laser_rms = 3       # laser jitter (ns)
#-------Only needed for S1S2 generator-------
fp_2      = 0.1     # singlet (GAr) probability. If not using S1S2 then use fp parameter above  and set accordingly

[view]
nbmax_wf = 1
xzoom = 0
yzoom = 0
dist = 0

[pdm_reco]
file_type                  = midas     #rootfile wfm
reconstructed_as           = feb       #asic
polarity                   = 0         # polarity of the waveform: 1 for positive peaks, -1 for negative peaks, (0 will automatically give +1 for root file and -1 for MIDAS)
baseline_to                = 1600e-9   # time from the beginning of the wf from which the baseline will be evaluated (in sec)
running_gate               = 120e-9    # period of time for the running mean (in sec)
threshold_in_rms           = 8         # at how many rms does the peak start
min_time_between_peaks     = 250e-9    # merge the peaks with this time between them (in sec)
extended_time_for_integral = 500e-9    # additional time to be added to the identifed peak at the end (in sec)
roi_left                   = 500e-9    # region of interest left width (in sec)
roi_right                  = 1500e-9   # region of interest right width (in sec)

[scint_clustering]
# Need checks with pulse_finding
# Conversion to ns
window            = 1000   # minimum window (in samples) of a cluster
distance          = 500    # minimum distance (in samples) between two clusters
threshold         = 5      # minimum number of pe in a cluster
sliding_window    = 500    # samples
precluster        = 20     # samples
s1window          = 4000   # always integrate S1 for 8 mus
baseline          = 1000  # samples

[silicon]
# Conversion to ns
threshold      = 6         # threshold in number of std of the baseline for the dedx_fast
distance       = 500       # minimum distance between two signals in dedx_fast
bl_samples     = 1000      # number of samples used for baseline mean
max_from_min   = 200       # number of samples used to search the fast max after the minimum
range_max_slow = 700       # number of samples used to search the slow max after the minimum in the fast
